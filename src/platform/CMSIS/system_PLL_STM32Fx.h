/*
* This file was generated by tools/stm32_clock_gen.sh on Mon 19 Jul 2021 12:56:49 PM EDT
*
* Attempt to generate prescaler values for STM32Fx devices (excluding the F1s)
* Supports PLLN ranging from 192-432 and PLLM from 2-63
*
* FREQ_INPUT_HZ must be set to the frequency of the source oscillator
* FREQ_OUTPUT_HZ must be set to the desired frequency of the system clock (HCLK)
*
* VCO_INPUT_{MIN,MAX}_HZ must be set to the minimum/maximum speeds of the VCO input
* VCO_OUTPUT_{MIN,MAX}_HZ must be set to the minimum/maximum speeds of the VCO output
* PLLM_{MIN,MAX} must be set to the minimum/maximum values of the PLLM prescaler
* PLLN_{MIN,MAX} must be set to the minimum/maximum values of the PLLN prescaler
* The above values can be found in the reference manual
*
* If successful:
*    PLLM is set to the value of the PLLM prescaler
*    PLLN is set to the value of the PLLN prescaler
*    PLLP is set to PLLP_DIV_{2 4 6 8}, which are caller-defined
*    PLLP_DIV is set to {2 4 6 8}
*    PLL_OUTPUT_HZ is set to the PLL output frequency
*    HCLK_DIV is set to {1 2 4 8 16 64 128 256 512}
*    VCO_{INPUT,OUTPUT}_HZ are set to the VCO input/output frequencies
*
* If unsuccessful, PLLP is not set.
*/
#if !defined(FREQ_INPUT_HZ)
# error "FREQ_INPUT_HZ must be defined"
#endif
#if ! defined(FREQ_OUTPUT_HZ)
# error "FREQ_OUTPUT_HZ must be defined"
#endif
#if ! defined(VCO_INPUT_MAX_HZ)
# error "VCO_INPUT_MAX_HZ must be defined"
#endif
#if ! defined(VCO_INPUT_MIN_HZ)
# error "VCO_INPUT_MIN_HZ must be defined"
#endif
#if ! defined(VCO_OUTPUT_MAX_HZ)
# error "VCO_OUTPUT_MAX_HZ must be defined"
#endif
#if ! defined(VCO_OUTPUT_MIN_HZ)
# error "VCO_OUTPUT_MIN_HZ must be defined"
#endif
#if ! defined(PLLM_MIN)
# error "PLLM_MIN must be defined"
#endif
#if ! defined(PLLM_MAX)
# error "PLLM_MAX must be defined"
#endif
#if ! defined(PLLN_MIN)
# error "PLLN_MIN must be defined"
#endif
#if ! defined(PLLN_MAX)
# error "PLLN_MAX must be defined"
#endif


#define PLLP_IGNORE 0xFF

// Per the reference manual VCO input should be close to 2 to minimize
// jitter so start high and work down
#undef PLLM
#define PLLM (FREQ_INPUT_HZ/VCO_INPUT_MAX_HZ)
#if PLLM < PLLM_MIN
# undef PLLM
# define PLLM PLLM_MIN
#endif

#if (PLLM == 2) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (3)
# endif
#endif // PLLM == 2

#if (PLLM == 3) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (4)
# endif
#endif // PLLM == 3

#if (PLLM == 4) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (5)
# endif
#endif // PLLM == 4

#if (PLLM == 5) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (6)
# endif
#endif // PLLM == 5

#if (PLLM == 6) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (7)
# endif
#endif // PLLM == 6

#if (PLLM == 7) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (8)
# endif
#endif // PLLM == 7

#if (PLLM == 8) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (9)
# endif
#endif // PLLM == 8

#if (PLLM == 9) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (10)
# endif
#endif // PLLM == 9

#if (PLLM == 10) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (11)
# endif
#endif // PLLM == 10

#if (PLLM == 11) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (12)
# endif
#endif // PLLM == 11

#if (PLLM == 12) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (13)
# endif
#endif // PLLM == 12

#if (PLLM == 13) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (14)
# endif
#endif // PLLM == 13

#if (PLLM == 14) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (15)
# endif
#endif // PLLM == 14

#if (PLLM == 15) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (16)
# endif
#endif // PLLM == 15

#if (PLLM == 16) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (17)
# endif
#endif // PLLM == 16

#if (PLLM == 17) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (18)
# endif
#endif // PLLM == 17

#if (PLLM == 18) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (19)
# endif
#endif // PLLM == 18

#if (PLLM == 19) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (20)
# endif
#endif // PLLM == 19

#if (PLLM == 20) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (21)
# endif
#endif // PLLM == 20

#if (PLLM == 21) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (22)
# endif
#endif // PLLM == 21

#if (PLLM == 22) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (23)
# endif
#endif // PLLM == 22

#if (PLLM == 23) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (24)
# endif
#endif // PLLM == 23

#if (PLLM == 24) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (25)
# endif
#endif // PLLM == 24

#if (PLLM == 25) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (26)
# endif
#endif // PLLM == 25

#if (PLLM == 26) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (27)
# endif
#endif // PLLM == 26

#if (PLLM == 27) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (28)
# endif
#endif // PLLM == 27

#if (PLLM == 28) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (29)
# endif
#endif // PLLM == 28

#if (PLLM == 29) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (30)
# endif
#endif // PLLM == 29

#if (PLLM == 30) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (31)
# endif
#endif // PLLM == 30

#if (PLLM == 31) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (32)
# endif
#endif // PLLM == 31

#if (PLLM == 32) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (33)
# endif
#endif // PLLM == 32

#if (PLLM == 33) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (34)
# endif
#endif // PLLM == 33

#if (PLLM == 34) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (35)
# endif
#endif // PLLM == 34

#if (PLLM == 35) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (36)
# endif
#endif // PLLM == 35

#if (PLLM == 36) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (37)
# endif
#endif // PLLM == 36

#if (PLLM == 37) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (38)
# endif
#endif // PLLM == 37

#if (PLLM == 38) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (39)
# endif
#endif // PLLM == 38

#if (PLLM == 39) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (40)
# endif
#endif // PLLM == 39

#if (PLLM == 40) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (41)
# endif
#endif // PLLM == 40

#if (PLLM == 41) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (42)
# endif
#endif // PLLM == 41

#if (PLLM == 42) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (43)
# endif
#endif // PLLM == 42

#if (PLLM == 43) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (44)
# endif
#endif // PLLM == 43

#if (PLLM == 44) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (45)
# endif
#endif // PLLM == 44

#if (PLLM == 45) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (46)
# endif
#endif // PLLM == 45

#if (PLLM == 46) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (47)
# endif
#endif // PLLM == 46

#if (PLLM == 47) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (48)
# endif
#endif // PLLM == 47

#if (PLLM == 48) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (49)
# endif
#endif // PLLM == 48

#if (PLLM == 49) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (50)
# endif
#endif // PLLM == 49

#if (PLLM == 50) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (51)
# endif
#endif // PLLM == 50

#if (PLLM == 51) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (52)
# endif
#endif // PLLM == 51

#if (PLLM == 52) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (53)
# endif
#endif // PLLM == 52

#if (PLLM == 53) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (54)
# endif
#endif // PLLM == 53

#if (PLLM == 54) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (55)
# endif
#endif // PLLM == 54

#if (PLLM == 55) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (56)
# endif
#endif // PLLM == 55

#if (PLLM == 56) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (57)
# endif
#endif // PLLM == 56

#if (PLLM == 57) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (58)
# endif
#endif // PLLM == 57

#if (PLLM == 58) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (59)
# endif
#endif // PLLM == 58

#if (PLLM == 59) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (60)
# endif
#endif // PLLM == 59

#if (PLLM == 60) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (61)
# endif
#endif // PLLM == 60

#if (PLLM == 61) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (62)
# endif
#endif // PLLM == 61

#if (PLLM == 62) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (63)
# endif
#endif // PLLM == 62

#if (PLLM == 63) && (!defined(PLLP_DIV)) && (PLLM <= PLLM_MAX)
# undef  VCO_INPUT_HZ
# define VCO_INPUT_HZ (FREQ_INPUT_HZ / PLLM)
# if VCO_INPUT_HZ < VCO_INPUT_MIN_HZ
#  define PLLP_DIV PLLP_IGNORE
# endif
# undef PLLN
# define PLLN (VCO_OUTPUT_MIN_HZ / VCO_INPUT_HZ)
# if PLLN < PLLN_MIN
#  undef  PLLN
#  define PLLN PLLN_MIN
# endif
# include "system_PLL_STM32Fx_1.h"
# if ! defined(PLLP_DIV)
#  undef  PLLM
#  define PLLM (64)
# endif
#endif // PLLM == 63

#if PLLP_DIV == PLLP_IGNORE
# undef PLLP_DIV
#endif
#if defined(PLLP_DIV)
# if PLLP_DIV == 2
#  define PLLP PLLP_DIV_2
# elif PLLP_DIV == 4
#  define PLLP PLLP_DIV_4
# elif PLLP_DIV == 6
#  define PLLP PLLP_DIV_6
# elif PLLP_DIV == 8
#  define PLLP PLLP_DIV_8
# else
#  error "Unhandled PLLP value"
# endif
#endif

#undef PLLP_IGNORE
// Might as well keep this if we're keeping the rest
//#undef PLLP_DIV
// This is useful for setting the oscillator frequency
//#undef PLL_OUTPUT_HZ
// These are used in the definitions of the register values so keep them
//#undef VCO_OUTPUT_HZ
//#undef VCO_INPUT_HZ
