/*
* This file was generated by tools/stm32_clock_gen.sh on Mon 19 Jul 2021 12:56:49 PM EDT
*/

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 2)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 1))
#  define PLLP_DIV 2
#  define HCLK_DIV 1
# endif // PLLP_DIV == 2
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 4)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 1))
#  define PLLP_DIV 4
#  define HCLK_DIV 1
# endif // PLLP_DIV == 4
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 6)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 1))
#  define PLLP_DIV 6
#  define HCLK_DIV 1
# endif // PLLP_DIV == 6
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 8)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 1))
#  define PLLP_DIV 8
#  define HCLK_DIV 1
# endif // PLLP_DIV == 8
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 2)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 2))
#  define PLLP_DIV 2
#  define HCLK_DIV 2
# endif // PLLP_DIV == 2
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 4)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 2))
#  define PLLP_DIV 4
#  define HCLK_DIV 2
# endif // PLLP_DIV == 4
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 6)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 2))
#  define PLLP_DIV 6
#  define HCLK_DIV 2
# endif // PLLP_DIV == 6
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 8)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 2))
#  define PLLP_DIV 8
#  define HCLK_DIV 2
# endif // PLLP_DIV == 8
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 2)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 4))
#  define PLLP_DIV 2
#  define HCLK_DIV 4
# endif // PLLP_DIV == 2
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 4)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 4))
#  define PLLP_DIV 4
#  define HCLK_DIV 4
# endif // PLLP_DIV == 4
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 6)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 4))
#  define PLLP_DIV 6
#  define HCLK_DIV 4
# endif // PLLP_DIV == 6
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 8)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 4))
#  define PLLP_DIV 8
#  define HCLK_DIV 4
# endif // PLLP_DIV == 8
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 2)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 8))
#  define PLLP_DIV 2
#  define HCLK_DIV 8
# endif // PLLP_DIV == 2
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 4)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 8))
#  define PLLP_DIV 4
#  define HCLK_DIV 8
# endif // PLLP_DIV == 4
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 6)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 8))
#  define PLLP_DIV 6
#  define HCLK_DIV 8
# endif // PLLP_DIV == 6
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 8)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 8))
#  define PLLP_DIV 8
#  define HCLK_DIV 8
# endif // PLLP_DIV == 8
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 2)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 16))
#  define PLLP_DIV 2
#  define HCLK_DIV 16
# endif // PLLP_DIV == 2
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 4)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 16))
#  define PLLP_DIV 4
#  define HCLK_DIV 16
# endif // PLLP_DIV == 4
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 6)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 16))
#  define PLLP_DIV 6
#  define HCLK_DIV 16
# endif // PLLP_DIV == 6
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 8)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 16))
#  define PLLP_DIV 8
#  define HCLK_DIV 16
# endif // PLLP_DIV == 8
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 2)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 64))
#  define PLLP_DIV 2
#  define HCLK_DIV 64
# endif // PLLP_DIV == 2
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 4)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 64))
#  define PLLP_DIV 4
#  define HCLK_DIV 64
# endif // PLLP_DIV == 4
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 6)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 64))
#  define PLLP_DIV 6
#  define HCLK_DIV 64
# endif // PLLP_DIV == 6
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 8)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 64))
#  define PLLP_DIV 8
#  define HCLK_DIV 64
# endif // PLLP_DIV == 8
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 2)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 128))
#  define PLLP_DIV 2
#  define HCLK_DIV 128
# endif // PLLP_DIV == 2
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 4)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 128))
#  define PLLP_DIV 4
#  define HCLK_DIV 128
# endif // PLLP_DIV == 4
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 6)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 128))
#  define PLLP_DIV 6
#  define HCLK_DIV 128
# endif // PLLP_DIV == 6
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 8)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 128))
#  define PLLP_DIV 8
#  define HCLK_DIV 128
# endif // PLLP_DIV == 8
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 2)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 256))
#  define PLLP_DIV 2
#  define HCLK_DIV 256
# endif // PLLP_DIV == 2
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 4)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 256))
#  define PLLP_DIV 4
#  define HCLK_DIV 256
# endif // PLLP_DIV == 4
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 6)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 256))
#  define PLLP_DIV 6
#  define HCLK_DIV 256
# endif // PLLP_DIV == 6
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 8)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 256))
#  define PLLP_DIV 8
#  define HCLK_DIV 256
# endif // PLLP_DIV == 8
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 2)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 512))
#  define PLLP_DIV 2
#  define HCLK_DIV 512
# endif // PLLP_DIV == 2
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 4)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 512))
#  define PLLP_DIV 4
#  define HCLK_DIV 512
# endif // PLLP_DIV == 4
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 6)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 512))
#  define PLLP_DIV 6
#  define HCLK_DIV 512
# endif // PLLP_DIV == 6
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 8)
# if (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ) && (PLL_OUTPUT_HZ == (FREQ_OUTPUT_HZ * 512))
#  define PLLP_DIV 8
#  define HCLK_DIV 512
# endif // PLLP_DIV == 8
#endif

